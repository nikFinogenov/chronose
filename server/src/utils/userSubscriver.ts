import { EventSubscriber, EntitySubscriberInterface, InsertEvent } from "typeorm";
import { User } from "../models/User";
import { Calendar } from "../models/Calendar";

@EventSubscriber()
export class UserSubscriber implements EntitySubscriberInterface<User> {
    listenTo() {
        return User;
    }

    async afterInsert(event: InsertEvent<User>) {
        console.log(`üìå User created: ${event.entity.id}`);

        const user = event.entity;

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º event.manager –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤ —Ç–æ–π –∂–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        const calendar = event.manager.create(Calendar, {
            name: user.fullName,
            description: "My personal calendar^^",
            owner: user
        });
        calendar.users = [user]; 

        await event.manager.save(calendar); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ä–∞–º–∫–∞—Ö —Ç–æ–π –∂–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        console.log(`‚úÖ Personal calendar created for user: ${user.id}`);
    }
}
